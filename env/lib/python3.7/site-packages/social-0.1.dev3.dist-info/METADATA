Metadata-Version: 2.1
Name: social
Version: 0.1.dev3
Summary: Social is a python package for social data analysis and exploitation
Home-page: https://github.com/ttm/social
Author: Renato Fabbri
Author-email: listamacambira@googlegroups.com
License: MIT
Keywords: complexity networks human interaction physics data mining analysis visualization music audio dsp physics synthesis toolbox
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Telecommunications Industry
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Religion
Classifier: Intended Audience :: Other Audience
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Multimedia :: Sound/Audio :: Sound Synthesis
Classifier: Topic :: Multimedia :: Sound/Audio :: Editors
Classifier: Topic :: Multimedia :: Sound/Audio :: Mixers
Classifier: Topic :: Multimedia :: Sound/Audio :: Speech
Classifier: Topic :: Artistic Software
Classifier: Topic :: Other/Nonlisted Topic
Classifier: Topic :: Text Processing
Classifier: Topic :: Text Processing :: Linguistic
Classifier: Topic :: Multimedia :: Graphics :: Presentation
Classifier: Topic :: Multimedia :: Sound/Audio :: Sound Synthesis
Classifier: Topic :: Multimedia :: Video :: Display
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3

==================================================================
Social participation data analysis and exploitation
==================================================================

This project gathers social data and routines for analysis and exploitation. At the most fundamental level, social participation linked data is accessed and analyzed. Public data, such as provided by the Gmane database or donated profiles from private networks (e.g. Facebook), or even gathered by Twitter, is incorporated as RDF in the Social Graph considered. Observance of stability and the synthesis of audiovisual artifacts eases observation, probing and exploitation.

Usage example
=================
Download messages from one GMANE list:

.. code:: python

    import social as S

    # put facebook user and password in ~/.social/fb/profile
    # or login on the browser window that will appear
    # or input login as arguments:
    sb=S.ScrapyBrowser()
    # input user id and returns the friend ids (and names...)
    friends=sb.getFriends()

    # To load GDF file:
    fg=S.GDFgraph("../data/RenatoFabbri06022014.gdf") # graph should be on fg.G
    # To make an abstract animtion with it:
    song=S.FSong(fg.G,"fsong/",True,True,False,True)
    # Check mixedVideo.webm

    # more ***in construction***

    ##########################################
    # SKETCH. This is not the toolbox.

    #S.download() # download ontologies and data

    #S.generalStats() # print number of triples, individuals, etc.

    #data=S.data()

    #d1=S.makeBasicDatastructures(data["participa"])
    #d2=S.makeBasicDatastructures(data["aa"])
    #d3=S.makeBasicDatastructures(data["cd"])

    #S.Analyze()

    # use the gmane python package to analyse network structure

    # Enjoy!


